package com.all{		import flash.display.Sprite;	import flash.display.Graphics;	import flash.events.MouseEvent;			public class LineGraph extends Sprite {				private var _lists:NodeList;		private var _width:Number;		private var _height:Number;		private var positions:Array;		private var ypos:Number;		private var xpos:Number;		private var Rscale:int;		public function LineGraph(lists:NodeList,width:Number,height:Number) {			_lists = lists;			_width = width;			_height = height;			Rscale = 2			xpos =10;						graphics.beginFill(0xFFFFFF,1.0);			graphics.drawRect(0,0,_width,_height);						graphics.endFill();		}				public function drawBudgetGraph(){			this.graphics.clear();			this.graphics.lineStyle(3);			this.graphics.moveTo(0,0);			this.graphics.lineTo(0,_height);			this.graphics.moveTo(0,_height);			this.graphics.lineTo(_width,_height);			this.graphics.moveTo(0,0);			this.graphics.lineTo(_width,0);			this.graphics.moveTo(_width,0);			this.graphics.lineTo(_width,_height);			if(this._lists.length>0){								this.graphics.lineStyle(2);				for(var i:int =1 ;i<=4;i++){					this.graphics.moveTo(_width*(1/5),_height*(i/5));					this.graphics.lineTo(_width*(4/5),_height*(i/5)); 				}				for(var i:int =0;i<4;i++){					this.graphics.drawCircle(_width*((i+1)/5),_height/5,this._lists.getNodeAt(i).getCostRadius()/Rscale);				}							}			else{							}		}		public function updates(node:NodeList){			//TODO : search for the past year data of the selected node			//then 			// update this._lists with the new list of the past 4 years of data then			//this.drawBudgetGraph();			//this._lists = node;			this.drawBudgetGraph();		}	}	}