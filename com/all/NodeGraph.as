package  com.all{	import flash.display.Sprite;	import flash.display.Graphics;	public class NodeGraph extends Sprite{		private var _lists:NodeList;				//temp place holder for the boundary to seperate selected nodes for each year		//needs to be adjusted once we know how it will be visualzed on the display		private var year1:int;		private var year2:int;		private var year3:int;				private var year4:int;			private var starting_ypos:int;		private var compression:int;			public function NodeGraph(lists:NodeList) {			// constructor code			_lists = lists;		}				public function drawBudgetGraph(){			//draw nodes			if(this._lists.length!=0){				this.graphics.lineStyle(2);				//***********compression needed to fit into the display***********//							this.graphics.beginFill(0x66CC99); 						this.graphics.drawCircle(year1,starting_ypos,this._lists[0].cost*compression); 				this.graphics.moveTo(year1,starting_ypos);				this.graphics.lineTo(year2,starting_ypos);				this.graphics.beginFill(0x330033); 				this.graphics.drawCircle(year2,starting_ypos,this._lists[1].cost*compression); 				this.graphics.moveTo(year2,starting_ypos);				this.graphics.lineTo(year3,starting_ypos);				this.graphics.beginFill(0xFFFF33); 						this.graphics.drawCircle(year3,starting_ypos,this._lists[2].cost*compression); 				this.graphics.moveTo(year3,starting_ypos);				this.graphics.lineTo(year4,starting_ypos);				this.graphics.beginFill(0x3399FF); 				this.graphics.drawCircle(year4,starting_ypos,this._lists[3].cost*compression); 							}		//***********compression needed to fit into the display***********//		}		public function update(node:Node){			//TODO : search for the past year data of the selected node			//then 			// update this._lists with the new list of the past 4 years of data then			//update compression to fit all the circle on the display			//compression : find the max node of the nodes then make the node fit on the display			//use the same ratio accross the nodes			this.drawBudgetGraph();		}	}	}